Zadanie 0.1
Przejdź do swojego katalogu domowego

Używam komendy cd ~
I znajduje się w swoim folderze domowym

Zadanie 0.2
Wydaj komendę: ls -a

Wyświetliło mi wszystkie kadtalogi, nawet te ukryte

Zadanie 0.3
Zobacz ile plików wypisało.

Wypisało mi 7 plików oraz 17 folderów

Zadanie 0.4
Teraz wydaj komendę: ls -a | grep D
HINT: Jeśli nie masz żadnego pliku czy katalogu z literką D to wybierz inną literkę, która już będzie w nazwie jakiegoś pliku czy katalogu.

W moim przypadku została użyta komenda ls -a | grep U

Zadanie 0.5
Zobacz ile teraz jest wyników. Co się stało?
Otóż program grep służy do wyszukiwania wierszy w pliku lub strumieniu wejściowym, które pasują do wzorca. Tu podano wzorzec jako "D".

Zostały wypisane wszystkie pliki oraz foldery zawierające, w moim przypadku litere U 
Jest ich 5

Zadanie 0.6
A teraz wykonaj komendę: ls -a | grep D > lista_plikow_z_literka_d.txt

W moim przypadku została użyta komenda ls -a | grep U > lista_plików_z_literka_u.txt
Z racji tego że użyłem tutaj dużego U zapisane są tu tylko 2 plikitee

Zadanie 0.7
Zobacz czy utworzył sie jakiś plik?
Jaka jest jego treść?
Co znaczy | oraz co znaczy > ?

Utworzyłem plik o nazwie lista_plikow_z_literka_u.txt
Trescia pliku sa pliki z literka U
| oznacza przekierowanie wyjscia jendego programu na wejscie drugiego
> oznacza przekierowanie wyjścia z programu do pliku

Zadanie 0.8
A teraz wykonaj komendę: ls -a | grep D | tee lista_plikow_z_literka_d_2.txt
Zobacz czy plik się utworzył?
Jaka jest treść względem poprzedniej próby bez programu tee?
Co robi program tee?

Została użyta komenda ls -a | grep u | tee lista_plikow_z_literka_u_2.txt
Plik został utworzony
Wcześniej plik został tylko utworzony
Z racji tego że użyłem tee, została pokazana zawartość pliku
Komenda tee służy do wyświetlania treści pliku

Zadanie 1

Program ps służy do wyświetlania listy procesów. 

Zadania:

A: Zobacz co się stanie jeśli wpiszemy w terminalu:

ps

ps -a

ps x

ps axu
INFO: tu kolejność parametrów a, x, u nie ma znaczenie a jedynie fakt, że są podane. 
Dowolna kolejność powinna dać ten sam wynik.

Jak myślisz, co oznacza znak zapytania w kolumnie 2?
Nie wiesz? A gdzie może być wyjaśnienie?

B: Jak wykonasz poniższe 2 zadania?

Wyświetl wszystkie procesy bash

Wyświetl wszystkie procesy należące do użytkownika root

A.1

Wyświetla listę procesów użytkownika

A.2

Wyświetla lsitę procesów, które nie są powiązane z terminalem

A.3

Wyświetla wszystkie procesy użytkownika, w tym te ukryte

A.4

Wypisuje wszystkie możliwe procesy
Literka x oznacza należące do użytkowników
Gdybym nie wiedział wpisuje komende man ps i szukam co oznacza x

B.1

Aby wyszukac procesow bash uzywam nastepujaca komende
ps axu | grep -E '[b]ash' | awk '$11 !~ /bash/'"

B.2

Wykonałem komende ps -u root
Dzięki sprecyzowaniu za pomocą -u wyszuka mi tylko i wyłącznie procesy użytkownika root.

Zadanie 2

1.Uruchom wybrany przez Ciebie graficzny edytor tekstowy (np. gedit, gvim, Visual Studio Code, atom, itd...)

Po włączeniu xubuntu zainstalowałem i włączyłem gedita

2.Zobacz jaki ma on PID - przyda się do tego komenda ps

użyłem komendy ps axu | grep gedit i wyświetliły mi się procesy z geditem
PID gedita to 4563


3.Wydaj komendę kill w taki sposób, aby ten edytor się wyłączył. Zobacz czy to działa.
UWAGA: Niektóre programy przechwytują sygnały i mogą je częściowo blokować.
			Jeśli program nie wyłącza się, to zobacz jaka jest jego reakcja.
			Zobacz czy możesz wysłać do niego SIGKILL (gdzie sprawdzisz jak to zrobić?)

Użyta została komenda kill 4563 i wyłączył się gedit

4.Zobacz działanie komendy killall bash

Killall bash zabija wszystkie procesy basha, oprócz aktualnie używanego terminala

5.Zobacz czy kill zadziała dla dowolnego procesu.

Komenda kill nie zawsze będzie działać, ze względu na typ wysyłanego sygnału.
Sygnał KILL jest tylko i wyłącznie poleceniem i nie zawsze musi być on spełniony.

wszystkiego dowiedziałem sie pomocą komendy man kill



Zadanie 3

3.1 Uruchom komendę cat be parametrów. Wciśnij CTRL+C i zobacz co się stanie:

Po uruchomieniu cat, wykoanie ^C zamyka proces i nie zapisuje żadnych zmian

3.2 Wydaj komendę cat > wynik3_1.txt. Wpisz tekst witaj bez wciskania klawisza Enter.
Wciśnij CTRL+C. Zobacz co się znalazło w pliku wynik3_1.txt:

Po użyciu kombinacji ^C plik jest pusty i nie zostały zapisane jakiekolwiek zmiany

3.3 Wydaj komendę cat > wynik3_2.txt. Wpisz tekst witaj bez wciskania klawisza Enter.
Wciśnij CTRL+D (możliwe, że będzie trzeba wcisnąć go 2x). Zobacz co się znalazło
w pliku wynik3_2.txt:

Po wpisaniu tekstu Witaj oraz użycia kombinacji ^D (Musiałem nacisnąć 2xkrotnie)
Zmiany zostały zapisane 

jak rozumiesz co się stało?:
Użycie ^C zamyka program od razu, bez ostrzeżenia
Natomiast ^D Zamyka proces ale zapisuje zmiany bez potrzeby zapisywanie F2 tudież jakim kolwiek innym sposobem.

czym oba te przykłady się różnią?:
Tym że ^C działa od razu i żadne zmiany nie zostaną zapisane
Natomiast ^D zapisuje wszystkie wprowadzoen zmiany przed zamknięciem pliku, 
zmiany zostaną zapisane czy tego chce czy nie.
(Skoro używam ^D to raczej chce by zostały zapisane)

DLACZEGO się różnią?
^C automatycznie zabija proces bez zapisania poprzedniego wprowadzonego imputu
^D wysyla sygnal o wczytaniu niepelnego wiersza pamieci

Zadanie 4

Zobacz co się stanie:

Wpisz komendę gimp (lub np. edytor tekstowy gedit)

użyta została komenda gedit by włączyć 

W terminalu w którym sie to uruchomiło wciśnij CTRL+Z

Po kliknieciu ^Z proces został wsztrzymany

Spróbuj coś wyklikać w gimpie / gedicie

Nie mogę nic kliknąć

Otwórz dowolne inne okno i przesuń je tak by częściowo nachodziło na okno gimpa / 
gedita i potem je odsuń by odsłonić w pełni okno gimpa / gedita


Co się stało? Wstrzymaliśmy program gimp/gedit.
Program wstrzymany za pomocą kombinacji CTRL+Z jest przenoszony w tło (background). 
Efekt jest taki, że taki program przestaje odpowiadać na cokolwiek a jego okno nie jest przerysowywane i robi się mozaika.

Komenda bg służy do wznowienia w tle wstrzymanego programu. Zobacz:

Wpisz komendę: bg

Jak widać gimp/gedit ożył (jeśli nie, to zapytaj prowadzącego)

Komenda fg służy do wznowienia na pierwszym planie wstrzymanego wcześniej procesu. Zobacz co się stanie:

Wpisz komendę: fg

Jak widać proces wrócił i można wcisnąć na przykład CTRL+C aby go zakończyć.

W momencie uruchamiania programu, możemy od razu nakazać wykonanie go w tle. Służy do tego znak & umieszczony na końcu instrukcji.

Po wykonaniu bg, mój gedit został zniesiony na dalszy plan

Zobacz:
INFO: Jeśli jakiegoś programu nie ma to zastąp go innym, który znasz.

Wykonaj komendę gimp &

Wykonaj komendę gedit &

Wykonaj komendę geany &

Zobacz co się stało (domyślam się, że uruchomiły się 3 programy, a na terminalu ciągle można coś pisać.

Uruchomiły się wszystkie programy wymienione w treści zadania, wszystkie te programy działają sobie w tle
i są całkowicie innym bytem niż terminal z którego w tym momencie korzystam.
Dzięki temu jesteśmy w stanie wykonywać bardzo dobry multitasking, bo nie dość że terminal nam cały czas działa
To mogę przechodzić do innych programów.


Kolejna komenda to jobs. Służy ona do wyświetlania listy zadań (jobów; nie mylić z procesami) przeniesionych do tła.

Przywróć program gedit (lub gimp, w każdym razie nie uruchomiony jako ostatni program) z tła na pierwszy plan. Skorzystaj z jobs aby dowiedzieć się jakie mają numery poszczególne zadania działające w tle.
składnia: fg %(numer jobu)

Wykonuje komendę jobs, by wyświetliły mi się wszystkie joby, mój git ma przypisany numer 8
By przywrócić go do działa z background wykonuje fq %3
